# Configuration Nginx pour Corti-Cuisine
# À placer dans /etc/nginx/sites-available/corti-cuisine

server {
    # Écoute sur le port 80 (HTTP)
    listen 80;
    listen [::]:80;
    
    # Nom de domaine (à remplacer par votre domaine)
    server_name example.com www.example.com;
    
    # Redirection vers HTTPS (décommenter pour activer HTTPS)
    # return 301 https://$server_name$request_uri;
    
    # Racine du site (build React)
    root /var/www/corti-cuisine/build;
    index index.html;
    
    # Gestion du routage React
    location / {
        try_files $uri $uri/ /index.html;
        expires 1h;
        add_header Cache-Control "public, no-transform";
    }
    
    # Proxy vers le backend Node.js pour les API
    location /api/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Proxy pour Socket.IO
    location /socket.io/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Configuration des fichiers statiques
    location ~* \.(?:jpg|jpeg|gif|png|ico|svg|woff2?|eot|ttf|otf|css|js|pdf)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }
}

# Configuration HTTPS (décommenter et configurer pour activer HTTPS)
#server {
#    listen 443 ssl http2;
#    listen [::]:443 ssl http2;
#    server_name example.com www.example.com;
#    
#    # Certificats SSL (Let's Encrypt)
#    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
#    
#    # Configuration SSL optimisée
#    ssl_protocols TLSv1.2 TLSv1.3;
#    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
#    ssl_prefer_server_ciphers off;
#    ssl_session_timeout 1d;
#    ssl_session_cache shared:SSL:50m;
#    ssl_session_tickets off;
#    ssl_stapling on;
#    ssl_stapling_verify on;
#    
#    # HSTS (décommenter si vous êtes sûr de toujours utiliser HTTPS)
#    # add_header Strict-Transport-Security "max-age=63072000" always;
#    
#    # Même configuration que HTTP
#    root /var/www/corti-cuisine/build;
#    index index.html;
#    
#    location / {
#        try_files $uri $uri/ /index.html;
#        expires 1h;
#        add_header Cache-Control "public, no-transform";
#    }
#    
#    location /api/ {
#        proxy_pass http://localhost:3001;
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection 'upgrade';
#        proxy_set_header Host $host;
#        proxy_cache_bypass $http_upgrade;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#    }
#    
#    location /socket.io/ {
#        proxy_pass http://localhost:3001;
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection "upgrade";
#        proxy_set_header Host $host;
#        proxy_cache_bypass $http_upgrade;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#    }
#    
#    location ~* \.(?:jpg|jpeg|gif|png|ico|svg|woff2?|eot|ttf|otf|css|js|pdf)$ {
#        expires 30d;
#        add_header Cache-Control "public, no-transform";
#    }
#}
